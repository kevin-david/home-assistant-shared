substitutions:
  name: "<YOUR_DEVICE_NAME_HERE>"
  wave_serial: "<YOUR_SERIAL_OR_UNIQUE_ID_HERE>"
  # See https://esphome.io/components/sensor/airthings_ble.html for how to find this
  # Note: If you have your ESP32 connected to your Wave device, it might cause problems syncing with your phone
  # Suggest powering down the ESP device before running firmware updates or attempting to sync with AirThings cloud, if you care about that
  wave_bluetooth_mac: "<YOUR_AIRTHINGS_WAVE_RADON_MAC_HERE>"
  # Note: This will impact battery life of the Wave device.
  # Radon only seems to be updated about every ~hour but temp/humidity can be much more frequent
  # Choose according to your needs
  # NOTE: Check out https://github.com/esphome/feature-requests/issues/1795#issuecomment-2745514146 for an improved version
  airthings_update_interval: "30min"

esphome:
  name: $name

esp32:
  board: esp32dev
  framework:
    type: esp-idf

# Enable logging
logger:
  level: DEBUG # Required for the tracker to show the device

api:

ota:
  platform: esphome

# Disabled since they interfere with ble client
#esp32_ble_tracker:
#bluetooth_proxy:
#  active: true

external_components:
  # https://github.com/esphome/feature-requests/issues/1795#issuecomment-2745514146
  - source: github://precurse/esphome_airthings_wave_radon
    components: [airthings_wave_plus]
    refresh: 0s

# Conversion factor for Radon - https://help.airthings.com/en/articles/3119854-radon-what-is-the-difference-between-pci-l-and-bq-m3
# Wave2 sensor bytes https://ztroop.github.io/wave-reader-utils/specs/#ti-over-the-air-download-service
# Maybe needed - 
# filters:
#   - filter_out: nan
#     unit_of_measurement: "pCi/L"
# to farenheit (float)((temp * (9.0f/5.0f)) + 32.0f);

sensor:
  - platform: airthings_wave_plus
    name: wave_plus
    ble_client_id: "airthings_$wave_serial"
    update_interval: $airthings_update_interval 
    battery_update_interval: $airthings_battery_update_interval 
    temperature:
      name: "Airthings ${wave_serial} Temperature"
      id: "airthings_${wave_serial}_temperature"
    radon:
      name: "Airthings ${wave_serial} Radon: Short Term (Raw)"
      id: "airthings_${wave_serial}_radon_raw"
    radon_long_term:
      name: "Airthings ${wave_serial} Radon: Long Term (Raw)"
      id: "airthings_${wave_serial}_radon_long_term_raw"
    pressure:
      name: "Airthings ${wave_serial} Pressure"
    humidity:
      name: "Airthings ${wave_serial} Relative Humidity"
      id: "airthings_${wave_serial}_relative_humidity"
    battery_voltage:
      name: "Airthings ${wave_serial} Battery Voltage"
      id: "airthings_${wave_serial}_battery_voltage"

  - platform: wifi_signal
    name: "$name WiFi Signal"
    update_interval: 5min
    
  - platform: uptime
    name: "$name Uptime"
    id: uptime_sensor
    update_interval: 5min

  - platform: pulse_counter
    pin: 
      number: GPIO4
      mode: INPUT_PULLUP
    unit_of_measurement: 'RPM'
    accuracy_decimals: 0
    update_interval: 5s
    id: x1c_bento_rear_fan_speed
    name: Bento Rear Fan Speed
    filters:
      - multiply: 0.5
  
  - platform: pulse_counter
    pin: 
      number: GPIO17
      mode: INPUT_PULLUP
    unit_of_measurement: 'RPM'
    accuracy_decimals: 0
    update_interval: 5s
    id: x1c_bento_front_fan_speed
    name: Bento Front Fan Speed
    filters:
      - multiply: 0.5

ble_client:
  - mac_address: $wave_bluetooth_mac
    id: "airthings_$wave_serial"

output:
  - platform: ledc
    pin:
      number: GPIO32
      inverted: false
      mode: OUTPUT
    id: rear_fan_pwm
    frequency: 25000 Hz
  - platform: ledc
    pin:
      number: GPIO33
      inverted: false
      mode: OUTPUT
    id: front_fan_pwm
    frequency: 25000 Hz
  - platform: ledc
    id: ams_riser_led
    pin:
      number: GPIO26
      mode: OUTPUT

light:
  - platform: monochromatic
    output: ams_riser_led
    icon: mdi:led-strip-variant
    name: "AMS Riser LED"

fan:
  - platform: speed
    output: front_fan_pwm
    name: Bento Front Fan
    id: x1c_bento_front_fan
    speed_count: 20
  - platform: speed
    output: rear_fan_pwm
    name: Bento Rear Fan
    id: x1c_bento_rear_fan
    speed_count: 20

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "$name Flbk"
    password: !secret fallback_password
